/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dorn.view;

import com.dorn.model.Jugador;
import com.dorn.model.power.Habilidad;
import com.dorn.model.heroe.Heroe;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author t30r3m4
 */
public class Tablero extends javax.swing.JFrame {

    int widthScreen,heightScreen;
    
    public Tablero() {
        initComponents();
        ajustarPantalla();
        //dibujarTablero("");
        //dibujarSecuencia();
        //dibujarHeroe(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpPrincipal = new javax.swing.JPanel();
        jpIzquierda = new javax.swing.JPanel();
        jpSecuencia0 = new javax.swing.JPanel();
        jpMapa = new javax.swing.JPanel();
        lblMapa = new javax.swing.JLabel();
        jpSecuencia1 = new javax.swing.JPanel();
        jpSecuencia2 = new javax.swing.JPanel();
        jpSecuencia3 = new javax.swing.JPanel();
        jpDerecha = new javax.swing.JPanel();
        jpImagenHeroe = new javax.swing.JPanel();
        lblImagenHeroe = new javax.swing.JLabel();
        jpVida = new javax.swing.JPanel();
        jpPuntosVida = new javax.swing.JPanel();
        jpExperiencia = new javax.swing.JPanel();
        jpPuntosExperiencia = new javax.swing.JPanel();
        jpMovimiento = new javax.swing.JPanel();
        jpAtaque = new javax.swing.JPanel();
        jpHabilidad = new javax.swing.JPanel();
        jpHabilidadActiva = new javax.swing.JPanel();
        jpHabilidadPasiva = new javax.swing.JPanel();
        jpMover = new javax.swing.JPanel();
        jpAccion = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpPrincipal.setLayout(new javax.swing.BoxLayout(jpPrincipal, javax.swing.BoxLayout.X_AXIS));

        jpIzquierda.setLayout(new javax.swing.BoxLayout(jpIzquierda, javax.swing.BoxLayout.Y_AXIS));

        javax.swing.GroupLayout jpSecuencia0Layout = new javax.swing.GroupLayout(jpSecuencia0);
        jpSecuencia0.setLayout(jpSecuencia0Layout);
        jpSecuencia0Layout.setHorizontalGroup(
            jpSecuencia0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jpSecuencia0Layout.setVerticalGroup(
            jpSecuencia0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );

        jpIzquierda.add(jpSecuencia0);

        jpMapa.setLayout(null);

        lblMapa.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblMapa.setAlignmentY(0.0F);
        lblMapa.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jpMapa.add(lblMapa);
        lblMapa.setBounds(0, 12, 72, 60);

        jpIzquierda.add(jpMapa);

        javax.swing.GroupLayout jpSecuencia1Layout = new javax.swing.GroupLayout(jpSecuencia1);
        jpSecuencia1.setLayout(jpSecuencia1Layout);
        jpSecuencia1Layout.setHorizontalGroup(
            jpSecuencia1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jpSecuencia1Layout.setVerticalGroup(
            jpSecuencia1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
        );

        jpIzquierda.add(jpSecuencia1);

        javax.swing.GroupLayout jpSecuencia2Layout = new javax.swing.GroupLayout(jpSecuencia2);
        jpSecuencia2.setLayout(jpSecuencia2Layout);
        jpSecuencia2Layout.setHorizontalGroup(
            jpSecuencia2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jpSecuencia2Layout.setVerticalGroup(
            jpSecuencia2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        jpIzquierda.add(jpSecuencia2);

        javax.swing.GroupLayout jpSecuencia3Layout = new javax.swing.GroupLayout(jpSecuencia3);
        jpSecuencia3.setLayout(jpSecuencia3Layout);
        jpSecuencia3Layout.setHorizontalGroup(
            jpSecuencia3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jpSecuencia3Layout.setVerticalGroup(
            jpSecuencia3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
        );

        jpIzquierda.add(jpSecuencia3);

        jpPrincipal.add(jpIzquierda);

        jpDerecha.setLayout(new javax.swing.BoxLayout(jpDerecha, javax.swing.BoxLayout.Y_AXIS));

        jpImagenHeroe.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Heroe", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Charter", 1, 24), new java.awt.Color(254, 254, 254))); // NOI18N
        jpImagenHeroe.setLayout(null);
        jpImagenHeroe.add(lblImagenHeroe);
        lblImagenHeroe.setBounds(0, 0, 0, 0);

        jpDerecha.add(jpImagenHeroe);

        jpVida.setLayout(new javax.swing.BoxLayout(jpVida, javax.swing.BoxLayout.Y_AXIS));

        jpPuntosVida.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Puntos de vida", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Charter", 1, 14), new java.awt.Color(254, 254, 254))); // NOI18N

        javax.swing.GroupLayout jpPuntosVidaLayout = new javax.swing.GroupLayout(jpPuntosVida);
        jpPuntosVida.setLayout(jpPuntosVidaLayout);
        jpPuntosVidaLayout.setHorizontalGroup(
            jpPuntosVidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
        );
        jpPuntosVidaLayout.setVerticalGroup(
            jpPuntosVidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        jpVida.add(jpPuntosVida);

        jpDerecha.add(jpVida);

        jpExperiencia.setLayout(new javax.swing.BoxLayout(jpExperiencia, javax.swing.BoxLayout.Y_AXIS));

        jpPuntosExperiencia.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Puntos de experiencia", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Charter", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        javax.swing.GroupLayout jpPuntosExperienciaLayout = new javax.swing.GroupLayout(jpPuntosExperiencia);
        jpPuntosExperiencia.setLayout(jpPuntosExperienciaLayout);
        jpPuntosExperienciaLayout.setHorizontalGroup(
            jpPuntosExperienciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
        );
        jpPuntosExperienciaLayout.setVerticalGroup(
            jpPuntosExperienciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
        );

        jpExperiencia.add(jpPuntosExperiencia);

        jpDerecha.add(jpExperiencia);

        jpMovimiento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movimiento", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Charter", 1, 14), new java.awt.Color(254, 254, 254))); // NOI18N

        javax.swing.GroupLayout jpMovimientoLayout = new javax.swing.GroupLayout(jpMovimiento);
        jpMovimiento.setLayout(jpMovimientoLayout);
        jpMovimientoLayout.setHorizontalGroup(
            jpMovimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpMovimientoLayout.setVerticalGroup(
            jpMovimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jpDerecha.add(jpMovimiento);

        jpAtaque.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ataque", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Charter", 1, 14), new java.awt.Color(254, 254, 254))); // NOI18N

        javax.swing.GroupLayout jpAtaqueLayout = new javax.swing.GroupLayout(jpAtaque);
        jpAtaque.setLayout(jpAtaqueLayout);
        jpAtaqueLayout.setHorizontalGroup(
            jpAtaqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
        );
        jpAtaqueLayout.setVerticalGroup(
            jpAtaqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 76, Short.MAX_VALUE)
        );

        jpDerecha.add(jpAtaque);

        jpHabilidad.setLayout(new java.awt.GridLayout(1, 2));

        jpHabilidadActiva.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Activas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Bitstream Charter", 1, 18))); // NOI18N
        jpHabilidadActiva.setLayout(new javax.swing.BoxLayout(jpHabilidadActiva, javax.swing.BoxLayout.Y_AXIS));
        jpHabilidad.add(jpHabilidadActiva);

        jpHabilidadPasiva.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pasivas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Bitstream Charter", 1, 18))); // NOI18N
        jpHabilidadPasiva.setLayout(new javax.swing.BoxLayout(jpHabilidadPasiva, javax.swing.BoxLayout.Y_AXIS));
        jpHabilidad.add(jpHabilidadPasiva);

        jpDerecha.add(jpHabilidad);

        jpMover.setLayout(new java.awt.GridLayout(3, 3));
        jpDerecha.add(jpMover);

        javax.swing.GroupLayout jpAccionLayout = new javax.swing.GroupLayout(jpAccion);
        jpAccion.setLayout(jpAccionLayout);
        jpAccionLayout.setHorizontalGroup(
            jpAccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );
        jpAccionLayout.setVerticalGroup(
            jpAccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        jpDerecha.add(jpAccion);

        jpPrincipal.add(jpDerecha);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jpAccion;
    private javax.swing.JPanel jpAtaque;
    private javax.swing.JPanel jpDerecha;
    private javax.swing.JPanel jpExperiencia;
    private javax.swing.JPanel jpHabilidad;
    private javax.swing.JPanel jpHabilidadActiva;
    private javax.swing.JPanel jpHabilidadPasiva;
    private javax.swing.JPanel jpImagenHeroe;
    private javax.swing.JPanel jpIzquierda;
    private javax.swing.JPanel jpMapa;
    private javax.swing.JPanel jpMover;
    private javax.swing.JPanel jpMovimiento;
    private javax.swing.JPanel jpPrincipal;
    private javax.swing.JPanel jpPuntosExperiencia;
    private javax.swing.JPanel jpPuntosVida;
    private javax.swing.JPanel jpSecuencia0;
    private javax.swing.JPanel jpSecuencia1;
    private javax.swing.JPanel jpSecuencia2;
    private javax.swing.JPanel jpSecuencia3;
    private javax.swing.JPanel jpVida;
    private javax.swing.JLabel lblImagenHeroe;
    private javax.swing.JLabel lblMapa;
    // End of variables declaration//GEN-END:variables

    private void ajustarPantalla() {
        int w,h;
        widthScreen = Toolkit.getDefaultToolkit().getScreenSize().width;
        heightScreen = Toolkit.getDefaultToolkit().getScreenSize().height;
        
        //-------------------------
        //Panel izquierda
        //-------------------------  
        w = (int)((widthScreen*14)/20);
        h = (int)((heightScreen*10)/12);             
           
        jpIzquierda.setBackground(java.awt.Color.BLACK);
        jpIzquierda.setPreferredSize(new Dimension(w, h));
        //-------------------------
        //Panel derecha
        //-------------------------
        w = (int)((widthScreen*5)/20);
        h = (int)((heightScreen*10)/12);
          
        jpDerecha.setBackground(java.awt.Color.red);
        jpDerecha.setPreferredSize(new Dimension(w, h));  
        
        
        this.dispose();
        setExtendedState(JFrame.MAXIMIZED_BOTH); 
        setUndecorated(true);
        
    }
    public void dibujarTablero(String rutaMapa){
        int w,h;

        
        //-------------------------
        //Tablero
        //-------------------------
        w = (int)((widthScreen*14)/20);
        h = (int)((heightScreen*9)/12);                
        //lblMapa.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        //lblMapa.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblMapa.setIcon(this.escalarImagen(w, h, "./assets/map/mapa_escalado.jpg"));
        lblMapa.setSize(w, h);
        //lblMapa.setLocation(100, 100);
        //lblMapa.setPreferredSize(new Dimension(w, h));
        
        jpMapa.setPreferredSize(new Dimension(w, h));
        jpMapa.setSize(w, h);
        jpMapa.setBackground(java.awt.Color.BLACK);   
       
    }
    public void dibujarSecuencia(ArrayList<Jugador> jugadores){
        jpSecuencia0.setLayout(new GridLayout(1, 2));
        jpSecuencia1.setLayout(new GridLayout(1, 2));
        jpSecuencia2.setLayout(new GridLayout(1, 4));
        jpSecuencia3.setLayout(new GridLayout(1, 5));
        
        jpSecuencia0.add(crearLabel("DÍA"));
        jpSecuencia0.add(crearLabel("NOCHE"));        
        
        jpSecuencia1.add(crearLabel("ZORKAL"));
        jpSecuencia1.add(crearLabel("HEROES"));
        
        jpSecuencia2.add(crearLabel("BENDICIÓN"));
        jpSecuencia2.add(crearLabel("MOVER"));
        jpSecuencia2.add(crearLabel("ATACAR"));
        jpSecuencia2.add(crearLabel("CURAR"));
        
        for(int i=1;i<jugadores.size();i++){
            jpSecuencia3.add(crearLabel(jugadores.get(i).getNombre()));
        }
        /*
        jpSecuencia3.add(crearLabel("ALMANOR"));
        jpSecuencia3.add(crearLabel("CHOROS"));
        jpSecuencia3.add(crearLabel("KAERDRAK"));
        jpSecuencia3.add(crearLabel("GUELIN"));
        jpSecuencia3.add(crearLabel("VARGEN")); 
        */
    }
    public void dibujarHeroe(Heroe heroe){
        int w,h;
        cambiarNombreHeroe(heroe.getNombre(),String.valueOf(heroe.getNivel()));
        //-------------------------
        //Imagen Heroe
        //-------------------------          
        w = (int)((widthScreen*4)/20);
        h = (int)((heightScreen*4)/12);
        //lblImagenHeroe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImagenHeroe.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/almanor.png"));
        lblImagenHeroe.setSize(w, h);
        lblImagenHeroe.setBounds(((int)((heightScreen*2)/100)), ((int)((heightScreen*3)/100)), w, h);
        jpImagenHeroe.setPreferredSize(new Dimension(w, h));
        jpImagenHeroe.setSize(w,h);
        jpImagenHeroe.setBackground(Color.BLACK);
        //jpImagenHeroe.setBounds(0, 0, w, h);
        //jpImagenHeroe.setBackground(Color.green);

        //-------------------------
        //Vida
        //-------------------------
        jpVida.setBackground(Color.BLACK);
        jpPuntosVida.setBackground(Color.BLACK);

        
        w = (int)((widthScreen*4)/100);
        h = (int)((heightScreen*4)/100);
        jpPuntosVida.setLayout(new GridLayout(1, heroe.getVidaMax()));

        //Sangre disponible
        for(int i=0;i<heroe.getVida();i++){
           JLabel s = new JLabel();
            s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/s_ok.png"));
            jpPuntosVida.add(s); 
        }
        //Sangre restante
        for(int i=0;i<(heroe.getVidaMax()-heroe.getVida());i++){
           JLabel s = new JLabel();
            s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/s_no.png"));
            jpPuntosVida.add(s); 
        }  
        
        //-------------------------
        //Experiencia
        //-------------------------
        jpExperiencia.setBackground(Color.BLACK);
        jpPuntosExperiencia.setBackground(Color.BLACK);

        
        w = (int)((widthScreen*4)/100);
        h = (int)((heightScreen*4)/100);
        jpPuntosExperiencia.setLayout(new GridLayout(1, heroe.getExperienciaMax()));
        if(heroe.getNivel()<3){
            //Experiencia actual
            for(int i=0;i<heroe.getExperiencia();i++){
               JLabel s = new JLabel();
                s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/e_ok.png"));
                jpPuntosExperiencia.add(s); 
            }
            //Experiencia total
            for(int i=0;i<(heroe.getExperienciaMax()-heroe.getExperiencia());i++){
               JLabel s = new JLabel();
                s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/e_no.png"));
                jpPuntosExperiencia.add(s); 
            }   
        }else{//Nivel máximo
            for(int i=0;i<7;i++){
               JLabel s = new JLabel();
                s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/z_no.png"));
                jpPuntosExperiencia.add(s); 
            }  
        }
        //-------------------------
        //Movimiento
        //-------------------------        
        jpMovimiento.setBackground(Color.BLACK);
        jpMovimiento.setLayout(new GridLayout(1, heroe.getMovimientoMax()));
        for(int i=0;i<heroe.getMovimiento();i++){
           JLabel s = new JLabel();
            s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/m_ok.png"));
            jpMovimiento.add(s); 
        }    
        for(int i=0;i<(heroe.getMovimientoMax()-heroe.getMovimiento());i++){
           JLabel s = new JLabel();
            s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/m_no.png"));
            jpMovimiento.add(s); 
        }
        //-------------------------
        //Ataque
        //-------------------------     
        
        jpAtaque.setBackground(Color.BLACK);
        jpAtaque.setLayout(new GridLayout(1, heroe.getAtaqueMax()));
        if(heroe.isAtaqueFisico()){//Ataque Físico
            cambiarTipoAtaque("Físico");
            for(int i=0;i<heroe.getAtaque();i++){
               JLabel s = new JLabel();
                s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/ataque_fisico_ok.png"));
                jpAtaque.add(s); 
            }    
            for(int i=0;i<(heroe.getAtaqueMax()-heroe.getAtaque());i++){
               JLabel s = new JLabel();
                s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/ataque_fisico_no.png"));
                jpAtaque.add(s); 
            }            
        }else{//Ataque Mágico
            cambiarTipoAtaque("Mágico");
            for(int i=0;i<heroe.getAtaque();i++){
               JLabel s = new JLabel();
                s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/ataque_magico_ok.png"));
                jpAtaque.add(s); 
            }    
            for(int i=0;i<(heroe.getAtaqueMax()-heroe.getAtaque());i++){
               JLabel s = new JLabel();
                s.setIcon(this.escalarImagen(w, h, "./assets/heroe/img/ataque_magico_no.png"));
                jpAtaque.add(s); 
            }    
        }
        //-------------------------
        //Habilidad
        //-------------------------
        for(Habilidad hab:heroe.getHabilidad()){
            
            if(hab.isCuestaAtaque()){//Activa
                JButton boton = new JButton(hab.getNombre());                
                jpHabilidadActiva.add(boton);                
            }else{//Pasiva
                JButton boton = new JButton(hab.getNombre());
                jpHabilidadPasiva.add(boton);
            }
        }
        
        //-------------------------
        //Mover
        //------------------------- 
        
        //-----Parte superior
        JButton br_4 = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_4.png"));
        jpMover.add(br_4);

        JButton br_up = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_up.png"));
        jpMover.add(br_up);

        JButton br_1 = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_1.png"));
        jpMover.add(br_1); 
        
        //-----Parte central
        JButton br_left = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_left.png"));
        jpMover.add(br_left);  

        JButton br_0 = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_0.png"));
        br_0.setEnabled(false);
        jpMover.add(br_0);  

        JButton br_right = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_right.png"));
        jpMover.add(br_right); 
        
        //-----Parte inferior        
        JButton br_3 = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_3.png"));
        jpMover.add(br_3); 

        JButton br_down = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_down.png"));
        jpMover.add(br_down);          

        JButton br_2 = new JButton(this.escalarImagen(w, h, "./assets/heroe/img/r_2.png"));
        jpMover.add(br_2);   
        
        //---------Se establecen los Listener
        br_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br_1ActionPerformed(evt);
            }
        });        
        br_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br_2ActionPerformed(evt);
            }
        });        
        br_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br_3ActionPerformed(evt);
            }
        });        
        br_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br_4ActionPerformed(evt);
            }
        });
        br_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br_upActionPerformed(evt);
            }
        });  
        br_right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br_rightActionPerformed(evt);
            }
        });   
        br_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br_downActionPerformed(evt);
            }
        });  
        br_left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                br_leftActionPerformed(evt);
            }
        });         
        
}    
    public ImageIcon escalarImagen(int w,int h, String url){
        ImageIcon ic = new ImageIcon(url);
        Image icRes = ic.getImage().getScaledInstance(w, h, Image.SCALE_SMOOTH);
        ic = new ImageIcon(icRes);
        return ic;
    }  
    private JLabel crearLabel(String texto){
         JLabel j = new JLabel(texto);
         j.setFont(new java.awt.Font("Bitstream Charter", 3, 14));
         j.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
         j.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
         return j;
    }    
    /*private void dibujarFicha(String urlFicha){
        int w,h;
        
    }*/
    //Programar el movimiento
    private void br_1ActionPerformed(ActionEvent evt) {
        System.out.println("Presiona br1");
    }      
    private void br_2ActionPerformed(ActionEvent evt) {
        System.out.println("Presiona br2");
    }      
    private void br_3ActionPerformed(ActionEvent evt) {
        System.out.println("Presiona br3");
    }      
    private void br_4ActionPerformed(ActionEvent evt) {
        System.out.println("Presiona br4");
    }   
    private void br_upActionPerformed(ActionEvent evt) {
        System.out.println("Presiona br_up");
    }  
    private void br_rightActionPerformed(ActionEvent evt) {
        System.out.println("Presiona br_right");
    }     
    private void br_downActionPerformed(ActionEvent evt) {
        System.out.println("Presiona br_down");
    }    
    private void br_leftActionPerformed(ActionEvent evt) {
        System.out.println("Presiona br_left");
    }  

    private void cambiarNombreHeroe(String nombre,String nivel) {
        jpImagenHeroe.setBorder(javax.swing.BorderFactory.createTitledBorder(null, nombre+" - nivel:"+nivel, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Charter", 1, 24), new java.awt.Color(254, 254, 254))); // NOI18N
        
    }
    private void cambiarTipoAtaque(String nombre){
        jpAtaque.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ataque "+nombre, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Charter", 1, 14), new java.awt.Color(254, 254, 254))); // NOI18N
    }

 
        
}  
    
    


    

